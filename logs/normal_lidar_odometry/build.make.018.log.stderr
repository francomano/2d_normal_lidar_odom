[01m[K/home/mf/Scrivania/2d_normal_lidar_odom/src/exercise/src/normal_tracker.cpp:[m[K In member function â€˜[01m[Kvoid NormalScanTracker::process(const ContainerType&)[m[Kâ€™:
[01m[K/home/mf/Scrivania/2d_normal_lidar_odom/src/exercise/src/normal_tracker.cpp:35:34:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KEigen::Isometry2f& NICP::X()[m[Kâ€™ is protected within this context
   35 |   Eigen::Isometry2f iso=solver.X([01;31m[K)[m[K;
      |                                  [01;31m[K^[m[K
In file included from [01m[K/home/mf/Scrivania/2d_normal_lidar_odom/src/exercise/src/normal_tracker.cpp:8[m[K:
[01m[K/home/mf/Scrivania/2d_normal_lidar_odom/src/exercise/include/nicp/eigen_nicp_2d.h:65:22:[m[K [01;36m[Knote: [m[Kdeclared protected here
   65 |   Eigen::Isometry2f& [01;36m[KX[m[K() { return _X; }
      |                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:366[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/home/mf/Scrivania/2d_normal_lidar_odom/src/exercise/include/normal_tracker.h:5[m[K,
                 from [01m[K/home/mf/Scrivania/2d_normal_lidar_odom/src/exercise/src/normal_tracker.cpp:1[m[K:
/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of â€˜[01m[Kvoid Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 2, 2>; Src = Eigen::Block<Eigen::Matrix<float, 3, 3>, 2, 2, false>; Func = Eigen::internal::assign_op<double, float>][m[Kâ€™:
[01m[K/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:732:41:[m[K   required from â€˜[01m[KDerived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Matrix<float, 3, 3>, 2, 2, false>; Derived = Eigen::Matrix<double, 2, 2>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:537:7:[m[K   required from â€˜[01m[KEigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Matrix<float, 3, 3>, 2, 2, false>; Derived = Eigen::Matrix<double, 2, 2>][m[Kâ€™
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:377:29:[m[K   required from â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::Block<Eigen::Matrix<float, 3, 3>, 2, 2, false>; _Scalar = double; int _Rows = 2; int _Cols = 2; int _Options = 0; int _MaxRows = 2; int _MaxCols = 2][m[Kâ€™
[01m[K/home/mf/Scrivania/2d_normal_lidar_odom/src/exercise/src/normal_tracker.cpp:48:62:[m[K   required from here
[01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:834:3:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY
  834 |   [01;31m[KEIGEN_CHECK_BINARY_COMPATIBILIY[m[K(Func,typename ActualDstTypeCleaned::Scalar,typename Src::Scalar);
      |   [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
make[2]: *** [CMakeFiles/normal_tracker.dir/build.make:63: CMakeFiles/normal_tracker.dir/src/normal_tracker.cpp.o] Errore 1
make[1]: *** [CMakeFiles/Makefile2:231: CMakeFiles/normal_tracker.dir/all] Errore 2
make: *** [Makefile:141: all] Errore 2
